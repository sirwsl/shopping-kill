mysql—url: jdbc:mysql://localhost:3306/shoppingkill?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&rewriteBatchedStatements=true #rewriteBatchedStatements=true开启批处理流程

spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      driverClassName: com.mysql.cj.jdbc.Driver
      driver-class-name: com.mysql.cj.jdbc.Driver
      platform: mysql
      url: ${mysql-url}
      username: root
      password: admin
      initial-size: 20 # 配置初始化大小、最小、最大
      min-idle: 0
      max-active: 50
      maxWait: 60000  #配置获取连接等待超时的时间
      timeBetweenEvictionRunsMillis: 60000  #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000  #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT1    #测试连接
      testWhileIdle: true #申请连接的时候检测，建议配置为true，不影响性能，并且保证安全性
      testOnBorrow: false #获取连接时执行检测，建议关闭，影响性能
      testOnReturn: false #归还连接时执行检测，建议关闭，影响性能
      pool-prepared-statements: false #是否开启PSCache，PSCache对支持游标的数据库性能提升巨大，oracle建议开启，mysql下建议关闭
      max-pool-prepared-statement-per-connection-size: 20 #开启poolPreparedStatements后生效
      filters: stat,wall,log4j #配置扩展插件，常用的插件有=>stat:监控统计  log4j:日志  wall:防御sql注入
      logSlowSql: true
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000  # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      # Druid WebStatFilter配置
      web-stat-filter:
        enabled: true
        url-pattern: /*
        exclusions: '*.gif,*.png,*.jpg,*.html,*.js,*.css,*.ico,/druid/*'
      # Druid StatViewServlet配置
      stat-view-servlet:
        enabled: true
        url-pattern: /druid/*
        reset-enable: true
        login-username: admin
        login-password: admin
      # 配置日志输出
      filter:
        slf4j:
          enabled: true
          statement-create-after-log-enabled: false
          statement-close-after-log-enabled: false
          result-set-open-after-log-enabled: false
          result-set-close-after-log-enabled: false
  jpa:
    database: MYSQL # 配置 DBMS 类型
    show-sql: true # 配置是否将执行的 SQL 输出到日志
    properties:
      hibernate:
        ddl-auto: none # 配置开启自动更新表结构
    open-in-view: false

  redis:
    lettuce:
      pool:
        max-active: 128
        max-idle: 8
        max-wait: -1
        min-idle: 0
    timeout: 10000
    cluster:
      nodes:
        - localhost:6379
        - localhost:6380
        - localhost:6381
        - localhost:6382
        - localhost:6383
        - localhost:6384
    password: admin

  rabbitmq:
    addresses: localhost:5672,localhost:5673,localhost:5674
    username: admin
    password: admin
    publisher-confirms: true
    publisher-returns: true
    #默认虚拟主机
    virtual-host: /
    #连接超时实践
    connection-timeout: 10000
    publisher-confirm-type: correlated
    template:
      mandatory: true
      retry:
        max-attempts: 5 #最大重试次数
        max-interval: 10000 #最大重试时间
    #消费端配置
    listener:
      type: direct
      direct:
        max-concurrency: 50
        concurrency: 10
        acknowledge-mode: manual #签收设置
        retry:
          enabled: true
          initial-interval: 50000
        prefetch: 1 #限流


redis:
  timeout: 10000 #客户端超时时间单位是毫秒 默认是2000
  maxIdle: 300 #最大空闲数
  maxTotal: 1000 #控制一个pool可分配多少个jedis实例,用来替换上面的redis.maxActive,如果是jedis 2.4以后用该属性
  maxWaitMillis: 1000 #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
  minEvictableIdleTimeMillis: 300000 #连接的最小空闲时间 默认1800000毫秒(30分钟)
  numTestsPerEvictionRun: 1024 #每次释放连接的最大数目,默认3
  timeBetweenEvictionRunsMillis: 30000 #逐出扫描的时间间隔(毫秒) 如果为负数,则不运行逐出线程, 默认-1
  testOnBorrow: true #是否在从池中取出连接前进行检验,如果检验失败,则从池中去除连接并尝试取出另一个
  testWhileIdle: true #在空闲时检查有效性, 默认false
  password: admin #密码

zookeeper-hosts: localhost:2181,localhost:2182,localhost:2183

jetcache:
  statIntervalMinutes: 1 #统计间隔
  areaInCacheName: false
  local:
    default: #默认area
      type: caffeine
      keyConvertor: fastjson
      limit: 10000              #本地缓存最大个数
      defaultExpireInMillis: 10000   #缓存的时间全局 默认值
  remote:
    default:
      type: redis.lettuce #使用lettuce
      keyConvertor: fastjson
      valueEncoder: java
      valueDecoder: java
      poolConfig:
        minIdle: 1
        maxIdle: 50
        maxTotal: 1000
        maxWait: 1000
      uri:
        - redis://admin@localhost:6379/0  #redis://密码@IP:端口/库
        - redis://admin@localhost:6380/0
        - redis://admin@localhost:6381/0
        - redis://admin@localhost:6382/0
        - redis://admin@localhost:6383/0
        - redis://admin@localhost:6384/0
      readFrom: masterPreferred #master优先